name: Run tests suite for postgresql in docker container

on:
  push:
    branches: [ master ]
    paths:
      - '**.py'
      - .github/workflows/tests-container.yml
      - requirements-tests.txt
  pull_request:
    branches: [ master ]
    paths:
      - '**.py'
      - .github/workflows/tests-container.yml
      - requirements-tests.txt

jobs:
  container-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
    env:
      OS: ubuntu-latest
      PYTHON: ${{ matrix.python-version }}
    # Docker Hub image that `container-job` executes in
    container: python:${{ matrix.python-version }}

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    - name: Run test noproc fixture on docker
      run: |
        pytest -n 0 -k docker --postgresql-host=postgres --postgresql-password=postgres --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: docker_postgres
        env_vars: OS, PYTHON
        fail_ci_if_error: true